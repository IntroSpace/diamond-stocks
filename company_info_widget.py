import pyqtgraph as pg
import requests
from PyQt5 import QtGui
from PyQt5.QtCore import QUrl, QThread, pyqtSignal, pyqtSlot
from PyQt5.QtGui import QIcon, QPixmap
from PyQt5.QtWidgets import QWidget, QInputDialog, QMessageBox

import fn_api
from UserInterfaces import filesave_widget, note_editor, updates_in_prices
from DBConnection import DBConnection
from UserInterfaces.company_info_widget_ui import Ui_Form
from file_exporter import FileWriter

# —Ü–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø—Ä–∏—Ä–æ—Å—Ç–∞ –∏–ª–∏ —É–±—ã—Ç–∫–∞ –≤ –∞–∫—Ü–∏—è—Ö –Ω–∞ —ç–∫—Ä–∞–Ω–µ
# –ø–µ—Ä–≤—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º —è–≤–ª—è–µ—Ç—Å—è –∫—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è —É–±—ã—Ç–∫–∞
# –≤—Ç–æ—Ä—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º - –∑–µ–ª—ë–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è –ø—Ä–∏—Ä–æ—Å—Ç–∞
DIFF_COLORS = ['#FF0000', '#32CD32']

# –∏–∫–æ–Ω–∫–∏ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –∏ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π
STAR = ['unstar', 'yellow_star']


class NoteEditorWidget(QWidget, note_editor.Ui_Form):
    def __init__(self, parent):
        """
        –û–∫–Ω–æ(–≤–∏–¥–∂–µ—Ç) –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–º–µ—Ç–æ–∫ —É –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π.

        :param parent: –ö–ª–∞—Å—Å, –≤—ã–∑—ã–≤–∞—é—â–µ–≥–æ –≤–∏–¥–∂–µ—Ç–∞, –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏, —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏.
        :type parent: QWidget
        """
        super(NoteEditorWidget, self).__init__()
        self.setupUi(self)
        # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª–∞—Å—Å —Ä–æ–¥–∏—Ç–µ–ª—è –∏ —Ç–µ–∫—É—â–∏–π —Ç–∏–∫–µ—Ä(–∞–Ω–≥–ª. ticker, symbol)
        # —Ç–∏–∫–µ—Ä - —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–æ–º–ø–∞–Ω–∏–π –Ω–∞ –±–∏—Ä–∂–µ. –î–ª—è –∫–∞–∂–¥–æ–π –±–∏—Ä–∂–∏ –æ–Ω —É–Ω–∏–∫–∞–ª–µ–Ω.
        self.parent_widget = parent
        self.symbol = self.parent_widget.symbol.text()
        # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –∑–∞–º–µ—Ç–∫—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã–≤–æ–¥–∏–º –µ—ë –Ω–∞ —ç–∫—Ä–∞–Ω
        self.initial = self.parent_widget.db.get_note_text(self.symbol)
        # —Å–æ–∑–¥–∞—ë–º –ø—É—Å—Ç—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é message_exit
        # –≤ –Ω–µ—ë –ø–æ–∑–∂–µ –±—É–¥–µ–º –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã—Ö–æ–¥–∞
        self.message_exit = None
        self.initUi()

    def initUi(self):
        self.note_text.setText(self.initial)
        # —Å–æ–µ–¥–∏–Ω—è–µ–º —Å–∏–≥–Ω–∞–ª—ã –∫–Ω–æ–ø–æ–∫ —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ —Å–ª–æ—Ç–∞–º–∏
        self.button_cancel.clicked.connect(self.close)
        self.button_save.clicked.connect(self.save_note)

    def save_note(self):
        # –µ—Å–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–Ω–∞—è –∑–∞–º–µ—Ç–∫–∞ —Ç–∞–∫–∞—è –∂–µ, –∫–∞–∫ –∏—Å—Ö–æ–¥–Ω–∞—è –∑–∞–º–µ—Ç–∫–∞, —Ç–æ –Ω–µ –∏–º–µ–µ—Ç —Å–º—ã—Å–ª–∞ –µ—ë –∑–∞–º–µ–Ω—è—Ç—å –≤ –ë–î
        # –≤ –∏–Ω–æ–º —Å–ª—É—á–∞–µ –¥–∞–Ω–Ω—ã–µ –ë–î –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –Ω–∞ –Ω–æ–≤—ã–µ, –∞ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è
        if self.note_text.text() != self.initial:
            self.parent_widget.db.edit_note_text(self.parent_widget.symbol.text(),
                                                 self.initial, self.note_text.text())
            self.close()

    def closeEvent(self, a0: QtGui.QCloseEvent) -> None:
        # –µ—Å–ª–∏ closeEvent –≤—ã–∑–≤–∞–ª–∞ –∫–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞, —Ç–æ self.sender –≤–µ—Ä–Ω—ë—Ç None
        # —Ç.–∫. –æ–±—ä–µ–∫—Ç None –Ω–µ –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥–∞ .text(), –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ –æ—à–∏–±–∫–∞
        # —á—Ç–æ–±—ã —ç—Ç–æ–≥–æ –∏–∑–±–µ–∂–∞—Ç—å, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –æ–ø–µ—Ä–∞—Ç–æ—Ä or
        # –µ—Å–ª–∏ self.sender –≤–µ—Ä–Ω—ë—Ç None, —Ç–æ –±—É–¥–µ—Ç –≤—ã–±—Ä–∞–Ω self.button_cancel
        if (self.sender() or self.button_cancel).text() == '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'\
                or self.note_text.text() == self.initial:
            # –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            self.message_exit = QMessageBox.Yes
        else:
            # –≤ –∏–Ω–æ–º —Å–ª—É—á–∞–µ –ø—Ä–æ—Å–∏–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            self.message_exit = QMessageBox.question(self, '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã—Ö–æ–¥–∞',
                                                     '–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏ –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è?',
                                                     QMessageBox.Yes | QMessageBox.No)
        # –µ—Å–ª–∏ –≤—ã—Ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω(–≤—ã–±—Ä–∞–Ω –≤–∞—Ä–∏–∞–Ω—Ç 'Yes'), –∑–∞–∫—Ä—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        # –∏–Ω–∞—á–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º closeEvent
        if QMessageBox.Yes == self.message_exit:
            super(NoteEditorWidget, self).closeEvent(a0)
        else:
            a0.ignore()


class UpdatesInPricesWidget(QWidget, updates_in_prices.Ui_Form):
    def __init__(self, parent_w, date, diff_c, diff_o, diff_h, diff_l):
        """
        –û–∫–Ω–æ(–≤–∏–¥–∂–µ—Ç) –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ü–µ–Ω–µ.

        :param parent_w: –ö–ª–∞—Å—Å —Ä–æ–¥–∏—Ç–µ–ª—è
        :type parent_w: QWidget
        :param date: –î–∞—Ç–∞ –ø—Ä–æ—à–ª–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω
        :type date: datetime.date
        :param diff_c: –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ close —Ü–µ–Ω–µ
        :type diff_c: float
        :param diff_o: –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ open —Ü–µ–Ω–µ
        :type diff_o: float
        :param diff_h: –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ high —Ü–µ–Ω–µ
        :type diff_h: float
        :param diff_l: –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ low —Ü–µ–Ω–µ
        :type diff_l: float
        """
        super(UpdatesInPricesWidget, self).__init__()
        self.setupUi(self)
        # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å—é –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        self.parent_w = parent_w    # –∫–ª–∞—Å—Å —Ä–æ–¥–∏—Ç–µ–ª—è
        self.date = date            # –¥–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        self.diff_c = diff_c        # —Ä–∞–∑–Ω–∏—Ü–∞ –≤ close —Ü–µ–Ω–µ
        self.diff_o = diff_o        # —Ä–∞–∑–Ω–∏—Ü–∞ –≤ open —Ü–µ–Ω–µ
        self.diff_h = diff_h        # —Ä–∞–∑–Ω–∏—Ü–∞ –≤ high —Ü–µ–Ω–µ
        self.diff_l = diff_l        # —Ä–∞–∑–Ω–∏—Ü–∞ –≤ low —Ü–µ–Ω–µ
        self.initUi()

    def initUi(self):
        # –≤—ã–≤–æ–¥–∏–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ —ç–∫—Ä–∞–Ω(–ø–µ—Ä–µ–¥–∞—ë–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–∞–∂–¥—ã–π label)
        self.ticker.setText(self.parent_w.symbol.text())
        self.name.setText(self.parent_w.name.text())
        self.lb_date.setText(str(self.date))
        self.lb_close.setText(str(self.diff_c))
        self.lb_open.setText(str(self.diff_o))
        self.lb_high.setText(str(self.diff_h))
        self.lb_low.setText(str(self.diff_l))

        # —Ä–∞–∑—É–∫—Ä–∞—à–∏–≤–∞–µ–º —ç—Ç–∏ label –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å —Ü–µ–Ω–∞ üßö
        for i in range(4):
            # –ø–æ–ª—É—á–∞–µ–º label, –≤ –∫–æ—Ç–æ—Ä–æ–º —É–∫–∞–∑–∞–Ω–∞ —Ü–µ–Ω–∞, –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            item = self.gridLayout.itemAtPosition(i + 1, 1).widget()
            item.setText('%.2f' % float(item.text()))

            # –ø—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å —Ü–µ–Ω–∞:
            #   –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã –±–æ–ª—å—à–µ 0, —Ç–æ —Å—Ç–∞–≤–∏–º –∑–µ–ª—ë–Ω—ã–π —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
            #   –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã –º–µ–Ω—å—à–µ 0, —Ç–æ —Å—Ç–∞–≤–∏–º –∫—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
            #   –µ—Å–ª–∏ —Ü–µ–Ω–∞ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å, —Ç–æ —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –æ—Å—Ç–∞—ë—Ç—Å—è —á—ë—Ä–Ω—ã–º
            diff = float(item.text())
            item.setText(('+' if diff > 0 else '') + str(diff))
            if diff == 0:
                item.setStyleSheet('color: #000')
            else:
                item.setStyleSheet('color: ' + DIFF_COLORS[diff > 0])


class FileSaveWidget(QWidget, filesave_widget.Ui_Form):
    def __init__(self, ticker, name, data, db):
        """
        –û–∫–Ω–æ(–≤–∏–¥–∂–µ—Ç) –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–∞–Ω–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏.

        :param ticker: –¢–∏–∫–µ—Ä –∫–æ–º–ø–∞–Ω–∏–∏, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–æ—Ç–æ—Ä–æ–π –Ω–∞–¥–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å
        :type ticker: str
        :param name: –ù–∞–∑–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–ø–∞–Ω–∏–∏
        :type name: str
        :param data: –î–∞–Ω–Ω—ã–µ –æ —Ü–µ–Ω–∞—Ö –∏–∑ –≥—Ä–∞—Ñ–∏–∫–∞
        :type data: dict
        :param db: DBConnection
        :type db: DBConnection
        """
        super(FileSaveWidget, self).__init__()
        self.setupUi(self)
        # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        self.ticker = ticker
        self.name = name
        self.data = data
        self.db = db
        # —Å–æ–∑–¥–∞—ë–º –ø—É—Å—Ç—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é message_exit
        # –≤ –Ω–µ—ë –ø–æ–∑–∂–µ –±—É–¥–µ–º –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã—Ö–æ–¥–∞
        self.message_exit = None
        # —Å–æ–µ–¥–∏–Ω—è–µ–º —Å–∏–≥–Ω–∞–ª—ã —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –∏–º —Å–ª–æ—Ç–∞–º–∏
        self.cancel.clicked.connect(self.close)
        self.save_excel.clicked.connect(self.import_excel)
        self.save_csv.clicked.connect(self.import_csv)
        # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–∏–±–æ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ, –ª–∏–±–æ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        self.filename.setText(db.get_filename(ticker))

    def import_excel(self):
        # –µ—Å–ª–∏ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø—É—Å—Ç–æ–µ, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        # –≤ –∏–Ω–æ–º —Å–ª—É—á–∞–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .xlsx
        # –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –¥–∞–Ω–Ω–æ–µ –æ–∫–Ω–æ
        if not (filename := self.filename.text()):
            QMessageBox.critical(self, '–ù–µ–≤–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞', '–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø—É—Å—Ç–æ–µ.')
        else:
            FileWriter.import_excel(filename, self.ticker, self.name, self.data)
            self.close()

    def import_csv(self):
        # –µ—Å–ª–∏ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø—É—Å—Ç–æ–µ, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        # –≤ –∏–Ω–æ–º —Å–ª—É—á–∞–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .csv
        # –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –¥–∞–Ω–Ω–æ–µ –æ–∫–Ω–æ
        if not (filename := self.filename.text()):
            QMessageBox.critical(self, '–ù–µ–≤–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞', '–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø—É—Å—Ç–æ–µ.')
        else:
            FileWriter.import_csv(filename, self.ticker, self.name, self.data)
            self.close()

    def closeEvent(self, a0: QtGui.QCloseEvent) -> None:
        # –µ—Å–ª–∏ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–µ –ø—É—Å—Ç–æ–µ, —Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤ –ë–î
        if filename := self.filename.text():
            self.db.update_set_filename(self.ticker, filename)
        if '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å' in (self.sender() or self.cancel).text()\
                or not filename:
            # –µ—Å–ª–∏ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –ª—é–±–∞—è –∏–∑ –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            # –∏–ª–∏ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã, –Ω–æ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø—É—Å—Ç–æ–µ
            # —Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã—Ö–æ–¥–∞
            self.message_exit = QMessageBox.Yes
        else:
            # –≤ –∏–Ω–æ–º —Å–ª—É—á–∞–µ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            self.message_exit = QMessageBox.question(self, '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã—Ö–æ–¥–∞',
                                                     '–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏ –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è?',
                                                     QMessageBox.Yes | QMessageBox.No)
        # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –≤—ã—Ö–æ–¥ –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è, –∑–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ
        # –≤ –∏–Ω–æ–º —Å–ª—É—á–∞–µ closeEvent –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è
        if QMessageBox.Yes == self.message_exit:
            super(FileSaveWidget, self).closeEvent(a0)
        else:
            a0.ignore()


class LogoThread(QThread):
    # —Å–∏–≥–Ω–∞–ª –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –ø–µ—Ä–µ–¥–∞—á–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    logo = pyqtSignal(bytes)

    def __init__(self, symbol, url):
        """
        –û—Ç–¥–µ–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ª–æ–≥–æ—Ç–∏–ø–∞ –¥–∞–Ω–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏

        :param symbol: –¢–∏–∫–µ—Ä –∫–æ–º–ø–∞–Ω–∏–∏
        :type symbol: str
        :param url: –°—Å—ã–ª–∫–∞ –Ω–∞ –ª–æ–≥–æ—Ç–∏–ø
        :type url: str
        """
        super(LogoThread, self).__init__()
        # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        self.symbol = symbol
        self.url = url

    def run(self) -> None:
        # –∑–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–≥–æ—Ç–∏–ø –∏ –ø–µ—Ä–µ–¥–∞—ë–º –µ–≥–æ —Å –ø–æ–º–æ—â—å—é —Å–∏–≥–Ω–∞–ª–∞
        self.logo.emit(requests.get(self.url).content)


class CompanyInfoWidget(QWidget, Ui_Form):
    def __init__(self, api, symbol, db):
        """
        –í–∏–¥–∂–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∏–π –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏

        :param api: fn_api.Connection –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ API
        :type api: fn_api.Connection
        :param symbol: –¢–∏–∫–µ—Ä –∫–æ–º–ø–∞–Ω–∏–∏
        :type symbol: str
        :param db: DBConnection –¥—è–ª —Ä–∞–±–æ—Ç—ã —Å –ë–î
        :type db: DBConnection
        """
        super().__init__()
        self.setupUi(self)
        # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        self.api = api
        self.db = db
        # –ø—É—Å—Ç—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –≤ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∑–∂–µ –∑–∞–ø–∏—à–µ–º –∑–Ω–∞—á–µ–Ω–∏—è
        self.thread = None
        self.status = False
        self.resp = None
        self.update_widget = None
        self.file_save_widget = None
        self.message_delete = None
        self.editor_widget = None
        # —Ä–∞—Å—Å—Ç–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∞–º –∏–∫–æ–Ω–∫–∏ –∏ –ø–æ–¥—Å–∫–∞–∑–∫–∏, –∞ —Ç–∞–∫–∂–µ —Å–æ–µ–¥–∏–Ω—è–µ–º —Å–∏–≥–Ω–∞–ª—ã –∏ —Å–ª–æ—Ç—ã
        self.download.setIcon(QIcon('src/icons/download.png'))
        self.download.clicked.connect(self.download_info)
        self.download.setToolTip('–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö')
        self.open_note.setIcon(QIcon('src/icons/note.png'))
        self.open_note.clicked.connect(self.show_note)
        self.open_note.setToolTip('–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–º–µ—Ç–∫—É')
        self.set_chosen.clicked.connect(self.add_remove_chosen)
        # —Å–æ–∑–¥–∞—ë–º –∏ –≥–æ—Ç–æ–≤–∏–º –≤–∏–¥–∂–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥—Ä–∞—Ñ–∏–∫–æ–º
        self.view = pg.PlotWidget()
        self.curve = self.view.plot(name="Stocks")
        # –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å –ø–æ–º–æ—â—å—é self.replaceInfo
        self.replaceInfo(symbol)
        self.widget_graph.layout().addWidget(self.view)

    def replaceInfo(self, symbol: str):
        # –µ—Å–ª–∏ –≤ —Å–ø–∏—Å–∫–µ –≤—ã–±—Ä–∞–Ω–∞ —Ç–∞ –∂–µ –∫–æ–º–ø–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä–∞—è —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞, —Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –æ–±–Ω–æ–≤–ª—è–µ–º
        if symbol == self.symbol.text():
            return
        # –µ—Å–ª–∏ –±—ã–ª–æ –≤–æ–∑–±—É–∂–¥–µ–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ APIError, –≤—ã—Å—Ç–∞–≤–ª—è–µ–º –≤–µ–∑–¥–µ –∑–Ω–∞—á–µ–Ω–∏—è null –∏ —Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏
        if symbol == 'null':
            self.symbol.setText('NULL')
            self.name.setText('NULL')
            self.p_close.setText('NULL')
            self.difference.setText('NULL')
            self.difference.hide()
            self.p_open.setText('NULL')
            self.p_high.setText('NULL')
            self.p_low.setText('NULL')
            self.ipo_date.setText('NULL')
            self.website.setText('NULL')
            self.webView.load(QUrl('about:blank'))
            self.curve.setData([0])
            self.logo.clear()
            if not self.download.isHidden():
                self.open_note.hide()
                self.set_chosen.hide()
                self.download.hide()
            return
        # –µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∏ —Å–∫—Ä—ã—Ç—ã, –∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ APIError –Ω–µ –±—ã–ª–æ –≤–æ–∑–±—É–∂–¥–µ–Ω–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏
        if self.download.isHidden():
            self.set_chosen.show()
            self.download.show()

        # –ø–æ–ª—É—á–∞–µ–º –≤—Å—é –Ω—É–∂–Ω—É—é –Ω–∞–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        profile, self.resp, latest_info = self.api.all_company_info(symbol)
        # –ø–æ–ª—É—á–∞–µ–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –æ –¥–∞–Ω–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏
        prev_info = self.db.get_checked(symbol)
        # –≤—ã–≤–æ–¥–∏–º —Ç–∏–∫–µ—Ä –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏
        self.symbol.setText(symbol)
        self.name.setText(profile.get('name'))
        # –æ—á–∏—â–∞–µ–º –ø—Ä–æ—à–ª—ã–π –ª–æ–≥–æ—Ç–∏–ø –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–≥–æ—Ç–∏–ø –¥—Ä—É–≥–æ–π –∫–æ–º–ø–∞–Ω–∏–∏, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        self.logo.clear()
        if logo_url := profile.get('logo'):
            self.thread = LogoThread(symbol, logo_url)
            self.thread.logo.connect(self.set_logo)
            self.thread.start()

        # –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –¥–∞–Ω–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è –≤ —Å–ø–∏—Å–∫–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö
        self.status = self.db.get_chosen_status(symbol)
        # –µ—Å–ª–∏ –¥–∞, —Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏
        # –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ —Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏
        # –≤ –æ–±–æ–∏—Ö —Å–ª—É—á–∞—è—Ö –º–µ–Ω—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –¥–ª—è –∫–Ω–æ–ø–∫–∏
        if self.status:
            self.open_note.show()
            self.set_chosen.setToolTip('–£–±—Ä–∞—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ')
        else:
            self.open_note.hide()
            self.set_chosen.setToolTip('–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ')
        # –º–µ–Ω—è–µ–º –∏–∫–æ–Ω–∫—É –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç self.status
        self.set_chosen.setIcon(QIcon(self.chosen_icon_path()))

        # –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, –≤—ã—Å—Ç–∞–≤–ª—è–µ–º –Ω—É–ª–µ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        # –µ—Å–ª–∏ –≤—Å—ë –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –≤–Ω–æ—Å–∏–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        if 'no_data' in self.resp.get('s', 'none'):
            self.curve.setData([0])
            diff = 0
        else:
            self.curve.setData(self.resp.get('c'))
            diff = latest_info.get('d', 0)
        # –ø—Ä–∏–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –≤ –≤–∏–¥ '¬±diff', –≥–¥–µ diff - –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ü–µ–Ω–µ
        self.difference.setText(('+' if diff > 0 else '') + '%.2f' % diff)

        # —Ä–∞–∑—É–∫—Ä–∞—à–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–Ω–∞—á–µ–Ω–∏–π diff
        # diff > 0 - –∑–µ–ª—ë–Ω—ã–π, diff < 0 - –∫—Ä–∞—Å–Ω—ã–π
        # –µ—Å–ª–∏ diff = 0, —Ç–æ —Ä–∞–∑–Ω–∏—Ü–∞ –Ω–µ –≤—ã–≤–æ–¥–∏—Ç—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω
        if diff == 0:
            self.difference.setText('')
        else:
            if self.difference.isHidden():
                self.difference.show()
            self.difference.setStyleSheet('color: ' + DIFF_COLORS[diff > 0])

        # –ø–æ–ª—É—á–∞–µ–º –Ω–æ–≤–µ–π—à–∏–µ —Ü–µ–Ω—ã –∞–∫—Ü–∏–π
        p_close = latest_info.get('c', 0)
        p_open = latest_info.get('o', 0)
        p_high = latest_info.get('h', 0)
        p_low = latest_info.get('l', 0)
        # –∑–∞–ø–æ–ª–Ω—è–µ–º –∏–º–µ—é—â–∏–º–∏—Å—è –¥–∞–Ω–Ω—ã–º–∏ –≤—Å–µ label –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏—Ö, –µ—Å–ª–∏ –Ω–∞–¥–æ
        self.ipo_date.setText(profile.get('ipo', 'not found'))
        self.website.setText(profile.get('weburl', 'not found'))
        self.p_close.setText('%.2f' % p_close)
        self.p_open.setText('%.2f' % p_open)
        self.p_high.setText('%.2f' % p_high)
        self.p_low.setText('%.2f' % p_low)

        # –µ—Å–ª–∏ –¥–∞–Ω–Ω—É—é –∫–æ–º–ø–∞–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å–º–æ—Ç—Ä–µ–ª
        # –∏ –¥–∞—Ç–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–µ —Ä–∞–≤–Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π –¥–∞—Ç–µ
        # —Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–∞–∑–Ω–∏—Ü—É –≤ —Ü–µ–Ω–∞—Ö –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø—Ä–æ—à–ª—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        if prev_info[0]:
            date, close, op, high, low = prev_info
            diff_c = p_close - close
            diff_o = p_open - op
            diff_h = p_high - high
            diff_l = p_low - low
            self.update_widget = UpdatesInPricesWidget(self, date, diff_c, diff_o, diff_h, diff_l)
            self.update_widget.show()
        # –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        # –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç, —Ç–æ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        self.webView.load(QUrl(profile.get('weburl', 'about:blank')))
        # –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –¥–∞–Ω–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏
        self.update_db_checked(latest_info)

    @pyqtSlot(bytes)
    def set_logo(self, data):
        # –µ—Å–ª–∏ –ª–æ–≥–æ—Ç–∏–ø –∑–∞–≥—Ä—É–∂–µ–Ω –¥–ª—è –¥—Ä—É–≥–æ–π –∫–æ–º–ø–∞–Ω–∏–∏, –Ω–∏—á–µ–≥–æ –Ω–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è
        if self.sender().symbol != self.symbol.text():
            return
        # –µ—Å–ª–∏ –≤—Å—ë –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –∑–∞–Ω–æ—Å–∏–º –ª–æ–≥–æ—Ç–∏–ø –≤ pixmap
        pixmap = QPixmap()
        pixmap.loadFromData(data)
        # –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫—É
        w, h = pixmap.size().width(), pixmap.size().height()
        coefficient = min(w, h) / 32
        try:
            self.logo.setPixmap(pixmap.scaled(w // coefficient, h // coefficient))
        except ZeroDivisionError:
            self.logo.clear()
        # —É–¥–∞–ª—è–µ–º —ç—Ç–æ—Ç –ø–æ—Ç–æ–∫
        self.thread.deleteLater()
        self.thread = None

    def chosen_icon_path(self):
        # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Ç—å –∫ –ø–æ–¥—Ö–æ–¥—è—â–µ–π –∏–∫–æ–Ω–∫–µ
        return f'src/icons/{STAR[self.status]}.png'

    def download_info(self):
        # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª
        self.file_save_widget = FileSaveWidget(self.symbol.text(), self.name.text(),
                                               self.resp, self.db)
        self.file_save_widget.show()

    def update_db_checked(self, info: dict):
        # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –≤ –ë–î
        self.db.edit_checked(self.symbol.text(), info.get('c', 0),
                             info.get('o', 0), info.get('h', 0), info.get('l', 0))

    def add_remove_chosen(self):
        if self.status:
            # –µ—Å–ª–∏ –¥–∞–Ω–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö
            # —Ç–æ –ø—Ä–æ—Å–∏–º –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –∏ —É–¥–∞–ª—è–µ–º, –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π
            self.message_delete = QMessageBox.question(self, '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è',
                                                       f'–£–¥–∞–ª–∏—Ç—å {self.symbol.text()} –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö?',
                                                       QMessageBox.Yes | QMessageBox.No)
            if QMessageBox.Yes == self.message_delete:
                self.db.remove_from_chosen(self.symbol.text())
                # –º–µ–Ω—è–µ–º –∏–∫–æ–Ω–∫—É –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—É—é
                self.status = not self.status
                self.set_chosen.setIcon(QIcon(self.chosen_icon_path()))
                self.open_note.hide()
        else:
            # –µ—Å–ª–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö
            # —Ç–æ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º, –∫–∞–∫—É—é –∑–∞–º–µ—Ç–∫—É –¥–æ–±–∞–≤–∏—Ç—å, –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–ø–∞–Ω–∏—é –≤ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ
            text, ok_pressed = QInputDialog.getText(self, '–í–≤–µ–¥–∏—Ç–µ –∑–∞–º–µ—Ç–∫—É',
                                                    '–í–≤–µ–¥–∏—Ç–µ –∑–∞–º–µ—Ç–∫—É –∫ –¥–∞–Ω–Ω—ã–º –∞–∫—Ü–∏—è–º')
            if ok_pressed:
                self.db.add_to_chosen(self.symbol.text(), self.name.text(), text)
                self.open_note.show()
                # –º–µ–Ω—è–µ–º –∏–∫–æ–Ω–∫—É –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—É—é
                self.status = not self.status
                self.set_chosen.setIcon(QIcon(self.chosen_icon_path()))
        # –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º –æ–∫–Ω–µ
        self.nativeParentWidget().update_info()

    def show_note(self):
        # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä –∑–∞–º–µ—Ç–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏
        self.editor_widget = NoteEditorWidget(self)
        self.editor_widget.show()
